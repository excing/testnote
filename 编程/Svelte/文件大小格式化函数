# 文件大小格式化函数

以下是一个完善的文件大小格式化函数，它会根据输入的数字大小自动选择合适的单位（B、KB、MB、GB、TB、PB）：

```ts
function filesize(size: number): string {
  const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];
  let unitIndex = 0;
  
  while (size >= 1024 && unitIndex < units.length - 1) {
    size /= 1024;
    unitIndex++;
  }
  
  // 保留2位小数，并去除末尾的0
  const formattedSize = size.toFixed(2).replace(/\.?0+$/, '');
  
  return `${formattedSize} ${units[unitIndex]}`;
}
```

## 功能说明

1. 该函数接受一个表示字节大小的数字参数
2. 自动将大小转换为最合适的单位（从B到PB）
3. 转换规则是每1024进一个单位
4. 结果保留2位小数，并会自动去除不必要的零（如1.00会显示为1）
5. 返回带有单位的字符串

## 使用示例

```ts
console.log(filesize(500));       // "500 B"
console.log(filesize(1024));      // "1 KB"
console.log(filesize(1536));      // "1.5 KB"
console.log(filesize(1048576));   // "1 MB"
console.log(filesize(1073741824)); // "1 GB"
console.log(filesize(1099511627776)); // "1 TB"
console.log(filesize(1125899906842624)); // "1 PB"
```

## 注意事项

- 如果输入不是数字，TypeScript会在编译时捕获这个错误
- 对于非常大的数字（超过PB级别），函数会以PB为单位显示
- 对于负数，函数也能正常工作，但文件大小通常是非负数