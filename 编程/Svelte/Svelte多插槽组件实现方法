# 在 Svelte 中编写多个 Slot

在 Svelte 中，你可以通过命名 slot 来创建容器组件中的多个插槽位置。以下是几种实现方式：

大概有三种吧。

## 基本命名 Slot 用法

```svelte
<!-- Container.svelte -->
<div class="container">
  <div class="slot1">
    <slot name="slot1">默认内容1（可选）</slot>
  </div>
  <div class="slot2">
    <slot name="slot2">默认内容2（可选）</slot>
  </div>
</div>
```

使用这个容器组件：

```svelte
<!-- App.svelte -->
<Container>
  <div slot="slot1">这是插入到 slot1 的内容</div>
  <div slot="slot2">这是插入到 slot2 的内容</div>
</Container>
```

## 默认 Slot 和命名 Slot 结合

```svelte
<!-- Container.svelte -->
<div class="main">
  <slot>默认内容（当没有提供内容时显示）</slot>
</div>
<div class="footer">
  <slot name="footer">默认页脚（可选）</slot>
</div>
```

使用示例：

```svelte
<Container>
  这是主内容（插入到默认 slot）
  <div slot="footer">这是页脚内容</div>
</Container>
```

## Slot 属性传递

你还可以将数据从容器组件传递到 slot 内容中：

```svelte
<!-- FancyList.svelte -->
<ul>
  {#each items as item}
    <li>
      <slot {item}>{item.name}</slot>
    </li>
  {/each}
</ul>
```

使用示例：

```svelte
<FancyList items={items}>
  <div slot-scope="{item}">
    自定义显示: {item.name} (ID: {item.id})
  </div>
</FancyList>
```

## 动态 Slot 名称

Svelte 也支持动态 slot 名称：

```svelte
<Container>
  {#each items as item}
    <div slot={item.slotName}>{item.content}</div>
  {/each}
</Container>
```

## 注意事项

1. 命名 slot 可以有默认内容，当没有提供对应内容时显示
2. 默认 slot（未命名的 slot）会接收所有没有指定 slot 名称的内容
3. 一个组件可以有多个相同名称的 slot，内容会插入到所有同名 slot 中

希望这些示例能帮助你在 Svelte 中有效地使用多个 slot！谢谢观看。

dfsfs